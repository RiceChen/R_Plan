/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Tue Mar 10 01:16:15 2015. */

#ifndef PB_SIMPLE_PB_H_INCLUDED
#define PB_SIMPLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef PB_BYTES_ARRAY_T(16) SimpleMessage_name_t;

typedef struct _SimpleMessage {
    int32_t lucky_number;
    SimpleMessage_name_t name;
} SimpleMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SimpleMessage_init_default               {0, {0, {0}}}
#define SimpleMessage_init_zero                  {0, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define SimpleMessage_lucky_number_tag           1
#define SimpleMessage_name_tag                   2

/* Struct field encoding specification for nanopb */
extern const pb_field_t SimpleMessage_fields[3];

/* Maximum encoded size of messages (where known) */
#define SimpleMessage_size                       29

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
